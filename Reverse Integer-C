int reverse(int x)
{
    long ans=0;
    while(1)
    {
        if(x/10==0)
        {
            return (ans*10 + x > INT_MAX || ans*10 + x < INT_MIN) ? 0 : ans*10 + x;
            //return ans*10 + x; //this will cause a wrong answer because the topic say 32 digit so it seems that some numbers can be an                   interger at input , but after the reverse it may exeed the intger bound , so it can be an error.
            //And as we say , it my exceed the integer range , so if we keep using ans as intger , it will overflow , but still it can                     represent to the screen , and this is why we cannot declare ans as intger , we should use long or something else
        }
        ans = x%10 + ans*10;
        x = x/10;
    }
}
/*#include <math.h>     //this cannot be doone in leetcode , i found that the function argument need to match the leetcode need

int reverse(int x, int *temp, int count) {
    if(x/10 == 0)
    {
        int ans = 0;
        int index = 0;
        for(int i = count ; i > -1 ; i--)
        {
            ans = power(*(temp+index) , count) + ans;
            index++;
        }
        return ans + x;
    }
    else
    {
        *(temp+count) = x%10;
        count++;
        x = x/10;
        reverse(x, temp , count);
    }
}*/
